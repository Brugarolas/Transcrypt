- chromium --disable-web-security --user-data-dir="~/aaa"
- There are some $$$ in the control_structures testlet.
- Some (dirty?) hacks in __runtime__.py and/or __builtin__.js, marked by ???. Look for better solutions?
- Autotest breaks on div_issues/__init__.py, line 135


===
- visit_Const "causes" emitting spurious ''
Minimaal voorbeeld + tree voor fragmentje uit div_issues.py

    autoTester.check ('Issue 144')
    __pragma__('opov')
    aList = [x for x in [1, 2, 3]]
    autoTester.check (aList)
    __pragma__('noopov')  

Dit genereert:

	autoTester.check ('Issue 144');
	var aList = (function () {
		var __accu0__ = [];
		var __iterable0__ = [1, 2, 3];
		for (var __index0__ = 0; __index0__ < len (__iterable0__); __index0__++) {
			var x = __getitem__ (__iterable0__, '__index0__');
			(function () {
				var __accu1__ = __accu0__;
				return __call__ (__accu1__.append, __accu1__, x);
			}) ();
		}
		return __accu0__;
	}) ();
	(function () {
		var __accu0__ = autoTester;
		return __call__ (__accu0__.check, __accu0__, aList);
	}) ();

De '' rond __index0__ zijn onwenselijk.
Welke type nodes staat hier in de tree.
Welke visit_Xxx worden hier doorlopen.
Hoe kan het anders
===
